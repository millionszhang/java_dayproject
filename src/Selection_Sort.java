import java.util.Arrays;
/*
第一次 2021、12、10
选择排序
*/
//选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，
// 存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。
//
//2.1 算法描述
//n个记录的直接选择排序可经过n-1趟直接选择排序得到有序结果。具体算法描述如下：
//初始状态：无序区为R[1..n]，有序区为空；
//第i趟排序(i=1,2,3…n-1)开始时，当前有序区和无序区分别为R[1..i-1]和R(i..n）。该趟排序从当前无序区中-选出关键字最小的记录 R[k]，
//将它与无序区的第1个记录R交换，使R[1..i]和R[i+1..n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；
//n-1趟结束，数组有序化了。



public class Selection_Sort {
    public static void main(String[] args) {
        int [] arr = {49,38,65,97,76,13,27,49};
        selectSort(arr,arr.length);
    }
    public static void selectSort(int [] arr,int n){
        for (int i = 0; i < n - 1; i++) {
            int index = i;
            int j;
            // 找出最小值得元素下标
            for (j = i + 1; j < n; j++) {
                if (arr[j] < arr[index]) {
                    index = j;
                }
            }
            int tmp = arr[index];
            arr[index] = arr[i];
            arr[i] = tmp;
            System.out.println(Arrays.toString(arr));
        }

    }
}
//        举个栗子（第一趟的排序过程）
//        原始序列：49、38、65、97、76、13、27、49
//        1）在进行选择排序过程中分成有序和无序两个部分，开始都是无序序列
//        结果：49、38、65、97、76、13、27、49
//        2）从无序序列中取出最小的元素13，将13同无序序列第一个元素交换，此时产生仅含一个元素的有序序列，无序序列减一
//        结果：{13、}   {38、65、97、76、49、27、49}
//        3）从无序序列中取出最小的元素27，将27同无序序列第一个元素交换，此时产生仅两个元素的有序序列，无序序列减一
//        结果：{13、27、}   {65、97、76、49、38、49}
//        4）从无序序列中取出最小的元素38，将38同无序序列第一个元素交换，此时产生含三个元素的有序序列，无序序列减一
//        结果：{13、27、38、}   {97、76、49、65、49}
//        5）从无序序列中取出最小的元素49，将49同无序序列第一个元素交换，此时产生含四个个元素的有序序列，无序序列减一
//        结果：{13、27、38、49、}   {76、97、65、49}
//        6）从无序序列中取出最小的元素49，将49同无序序列第一个元素交换，此时产生含五个元素的有序序列，无序序列减一
//        结果：{13、27、38、49、49、}   {97、65、76}
//        7）从无序序列中取出最小的元素65，将65同无序序列第一个元素交换，此时产生含六个元素的有序序列，无序序列减一
//        结果：{13、27、38、49、49、65}   {97、76}
//        8）从无序序列中取出最小的元素76，将76同无序序列第一个元素交换，此时产生含七个元素的有序序列，无序序列减一
//        结果：{13、27、38、49、49、65、76、}   {97}
//        9）最后一个元素肯定是最大元素，无序排序直接生产一个有序的序列
//        结果：{13、27、38、49、49、65、76、97}
